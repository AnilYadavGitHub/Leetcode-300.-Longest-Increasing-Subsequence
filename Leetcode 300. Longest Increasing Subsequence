class Solution {
private:
int solve(int ind , int prev , vector<int>& nums , int n , vector<vector<int>> &dp){

    if(ind == n)return 0;
    
    if(dp[ind][prev + 1] != -1){
        return dp[ind][prev + 1];
    }
    int len = 0 + solve(ind + 1 , prev , nums , n , dp);

    if(prev == -1 || nums[ind] > nums[prev]){
        len = max(len , 1 + solve(ind + 1 , ind , nums , n , dp));
    }

    return dp[ind][prev + 1] = len;
}    
public:
    int lengthOfLIS(vector<int>& nums) {
        
        vector<vector<int>>dp(nums.size() , vector<int>(nums.size() + 1 , -1));
        return solve(0 , -1 , nums , nums.size() , dp);
    }
};
